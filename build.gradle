/*
 */
 
    
plugins {
  id "ca.coglinc.javacc" version "2.3.1"
  id "com.jfrog.bintray" version "1.7.1"
  id "org.sonarqube" version "2.2"
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "jacoco"


version = '0.3.3'
sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {
    javaccOutput = file(project.buildDir.absolutePath + '/generated/javacc/ch/poole/openinghoursparser')
    javaccSource = file(project.buildDir.absolutePath + '/generated/javacc/');
    mainSource = file('src/main/java/')
    testSource = file('src/test/java/')
}

compileJavacc {
    inputDirectory = mainSource
    outputDirectory = javaccOutput
}

compileJava {
    source javaccSource,mainSource
}

compileTestJava {
    source javaccSource,mainSource, testSource
}

javadoc {
    source mainSource, testSource
    exclude '**/*.jj'
}

task sourcesJar(type: Jar) {
	from mainSource, testSource
	classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
//	options.encoding = 'UTF-8'
}

sonarqube {
    properties {
        property "sonar.sourceEncoding","UTF-8"
        property "sonar.java.binaries", "build/classes/main/"
        property "sonar.jacoco.reportPaths","build/jacoco/test.exec"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'ch.poole'
            artifactId 'OpeningHoursParser'
			artifact sourcesJar
			artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'osm'
        name = 'OpeningHoursParser'
        licenses = ['BSD 3-Clause']
        vcsUrl = 'https://github.com/simonpoole/OpeningHoursParser.git'
        version {
        	name = '0.3.3'
			released  = new Date()
			gpg {
				sign = true //Determines whether to GPG sign the files. The default is false
				passphrase = System.getenv('BINTRAY_PASSPHRASE')
			}
        }
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	testCompile 'junit:junit:4.12'
}

